name: CI

on:
    pull_request: {}
    push:
        branches:
            - main

permissions:
    contents: read

env:
    RUSTFLAGS: '-Dwarnings'

jobs:
    lint-rust:
        name: Lint Rust
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Set up Rust toolchain
              run: rustup toolchain install stable --no-self-update --profile default

            - name: Set up Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
                  save-if: ${{ github.ref == 'refs/heads/main' }}

            - name: Check formatting
              run: cargo fmt --all --check

            - name: Lint
              run: cargo clippy --all-features

    lint-typescript:
        name: Lint TypeScript
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Set up Node.js
              uses: actions/setup-node@v5
              with:
                  node-version: 'lts/*'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Check Prettier
              run: npx prettier --check .

            - name: Check Commitlint (pull request)
              if: github.event_name == 'pull_request'
              run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

            - name: Check Commitlint (push)
              if: github.event_name == 'push'
              run: npx commitlint --last --verbose

            - name: Check types
              run: npm run typecheck
              working-directory: packages/supermarket-authenticator

            - name: Lint
              run: npm run lint
              working-directory: packages/supermarket-authenticator

    test-rust:
        name: Test Rust
        runs-on: ubuntu-latest

        services:
            postgresql:
                image: postgres
                ports:
                    - 55432:5432
                env:
                    POSTGRES_USER: finance
                    POSTGRES_PASSWORD: finance
                    POSTGRES_DB: finance

        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Set up Rust toolchain
              run: rustup toolchain install stable --no-self-update --profile default

            - name: Set up Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
                  save-if: ${{ github.ref == 'refs/heads/main' }}

            - name: Install Cargo Binary Install
              uses: cargo-bins/cargo-binstall@main

            - name: Install crates
              run: cargo binstall -y sea-orm-cli

            - name: Test
              run: cargo test --all-features

    test-typescript:
        name: Test TypeScript
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Set up Node.js
              uses: actions/setup-node@v5
              with:
                  node-version: 'lts/*'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run make
              working-directory: packages/supermarket-authenticator

            # - name: Unit tests
            #   run: npm run test:unit
            #   working-directory: packages/web-react

            # - name: End-to-End tests
            #   run: npm run test:e2e
            #   working-directory: packages/web-react
